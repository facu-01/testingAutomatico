package com.example.testingautomatico;

/*import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;*/

// Generated by Selenium IDE

import org.junit.jupiter.api.*;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.JavascriptExecutor;
import java.util.*;

public class GarbarinoTest {
    
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  
  @BeforeAll
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  
  @AfterEach
  public void tearDown() {
    driver.quit();
  }
  
  @Test
  public void garbarinoTest() {
      
    driver.get("https://www.garbarino.com/vitrocalefactor-2000w-panel-de-vidrio-templado-westinghouse-negro-7365/p");
    driver.manage().window().setSize(new Dimension(1692, 806));
    
    // Elemento que contiene el precio unitario
    WebElement precioUnitarioElement = driver.findElement(By.cssSelector(
            ".vtex-product-price-1-x-sellingPrice vtex-product-price-1-x-sellingPrice--product-selling-price vtex-product-price-1-x-sellingPrice--hasListPrice vtex-product-price-1-x-sellingPrice--product-selling-price--hasListPrice"
    ));
    
    driver.findElement(By.cssSelector(".vtex-add-to-cart-button-0-x-buttonText--product-buy-buttom")).click();
    driver.findElement(By.cssSelector(".ph4")).click();
    
    {
      WebElement element = driver.findElement(By.cssSelector(".ph4"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    
    driver.findElement(By.cssSelector(".vtex-product-list-0-x-quantitySelectorIncrease > svg")).click();
    
    {
      WebElement element = driver.findElement(By.cssSelector(".vtex-product-list-0-x-quantitySelectorIncrease > svg"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    
    // Elemento que contiene el precio subtotal de la compra
    WebElement subtotalElement = driver.findElement(By.cssSelector("#items-price"));
    
    // Se transforman los elementos de los precios en valores numéricos
    /*double precioUnitario = Double.parseDouble(precioUnitarioElement.getText().replace("/[^a-zA-Z0-9 ]/g", ""));
    double subtotal = Double.parseDouble(subtotalElement.getText().replace("/[^a-zA-Z0-9 ]/g", ""));*/
    
    // Salida en la consola para verificar
      System.out.println("Precio unitario: " + precioUnitarioElement.getText());
      System.out.println("Subtotal: " + subtotalElement.getText());
      
    // Aserción
    //assertEquals(subtotal, (precioUnitario*2).toString());
    
  }
  
}
